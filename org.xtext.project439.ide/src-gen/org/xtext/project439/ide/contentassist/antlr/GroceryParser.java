/*
 * generated by Xtext 2.15.0
 */
package org.xtext.project439.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.project439.ide.contentassist.antlr.internal.InternalGroceryParser;
import org.xtext.project439.services.GroceryGrammarAccess;

public class GroceryParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(GroceryGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, GroceryGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getAbstractElementAccess().getAlternatives(), "rule__AbstractElement__Alternatives");
			builder.put(grammarAccess.getBuildingAccess().getAlternatives(), "rule__Building__Alternatives");
			builder.put(grammarAccess.getStoreElementsAccess().getAlternatives(), "rule__StoreElements__Alternatives");
			builder.put(grammarAccess.getMovementElementAccess().getAlternatives(), "rule__MovementElement__Alternatives");
			builder.put(grammarAccess.getPersonAccess().getAlternatives(), "rule__Person__Alternatives");
			builder.put(grammarAccess.getItemAccess().getAlternatives(), "rule__Item__Alternatives");
			builder.put(grammarAccess.getFoodItemAccess().getAlternatives(), "rule__FoodItem__Alternatives");
			builder.put(grammarAccess.getMovementAccess().getAlternatives(), "rule__Movement__Alternatives");
			builder.put(grammarAccess.getQualityLevelAccess().getAlternatives(), "rule__QualityLevel__Alternatives");
			builder.put(grammarAccess.getStoreAccess().getGroup(), "rule__Store__Group__0");
			builder.put(grammarAccess.getWarehouseAccess().getGroup(), "rule__Warehouse__Group__0");
			builder.put(grammarAccess.getShelfAccess().getGroup(), "rule__Shelf__Group__0");
			builder.put(grammarAccess.getBackroomAccess().getGroup(), "rule__Backroom__Group__0");
			builder.put(grammarAccess.getProduceAccess().getGroup(), "rule__Produce__Group__0");
			builder.put(grammarAccess.getPerishableItemAccess().getGroup(), "rule__PerishableItem__Group__0");
			builder.put(grammarAccess.getNonFoodItemAccess().getGroup(), "rule__NonFoodItem__Group__0");
			builder.put(grammarAccess.getDriverAccess().getGroup(), "rule__Driver__Group__0");
			builder.put(grammarAccess.getEmployeeAccess().getGroup(), "rule__Employee__Group__0");
			builder.put(grammarAccess.getCustomerAccess().getGroup(), "rule__Customer__Group__0");
			builder.put(grammarAccess.getSupplierAccess().getGroup(), "rule__Supplier__Group__0");
			builder.put(grammarAccess.getVehicleAccess().getGroup(), "rule__Vehicle__Group__0");
			builder.put(grammarAccess.getDeliveryAccess().getGroup(), "rule__Delivery__Group__0");
			builder.put(grammarAccess.getSaleAccess().getGroup(), "rule__Sale__Group__0");
			builder.put(grammarAccess.getStockMovementAccess().getGroup(), "rule__StockMovement__Group__0");
			builder.put(grammarAccess.getDECIMALAccess().getGroup(), "rule__DECIMAL__Group__0");
			builder.put(grammarAccess.getDATEAccess().getGroup(), "rule__DATE__Group__0");
			builder.put(grammarAccess.getADDRESSAccess().getGroup(), "rule__ADDRESS__Group__0");
			builder.put(grammarAccess.getGroceryAccess().getElementsAssignment(), "rule__Grocery__ElementsAssignment");
			builder.put(grammarAccess.getStoreAccess().getNameAssignment_1(), "rule__Store__NameAssignment_1");
			builder.put(grammarAccess.getStoreAccess().getElementsAssignment_3(), "rule__Store__ElementsAssignment_3");
			builder.put(grammarAccess.getWarehouseAccess().getNameAssignment_1(), "rule__Warehouse__NameAssignment_1");
			builder.put(grammarAccess.getWarehouseAccess().getAddressAssignment_5(), "rule__Warehouse__AddressAssignment_5");
			builder.put(grammarAccess.getWarehouseAccess().getSupplierAssignment_8(), "rule__Warehouse__SupplierAssignment_8");
			builder.put(grammarAccess.getShelfAccess().getNameAssignment_1(), "rule__Shelf__NameAssignment_1");
			builder.put(grammarAccess.getShelfAccess().getItemsAssignment_3(), "rule__Shelf__ItemsAssignment_3");
			builder.put(grammarAccess.getBackroomAccess().getNameAssignment_1(), "rule__Backroom__NameAssignment_1");
			builder.put(grammarAccess.getBackroomAccess().getItemsAssignment_3(), "rule__Backroom__ItemsAssignment_3");
			builder.put(grammarAccess.getProduceAccess().getNameAssignment_1(), "rule__Produce__NameAssignment_1");
			builder.put(grammarAccess.getProduceAccess().getPriceAssignment_5(), "rule__Produce__PriceAssignment_5");
			builder.put(grammarAccess.getProduceAccess().getQuantityAssignment_8(), "rule__Produce__QuantityAssignment_8");
			builder.put(grammarAccess.getProduceAccess().getQualityAssignment_11(), "rule__Produce__QualityAssignment_11");
			builder.put(grammarAccess.getPerishableItemAccess().getNameAssignment_1(), "rule__PerishableItem__NameAssignment_1");
			builder.put(grammarAccess.getPerishableItemAccess().getPriceAssignment_5(), "rule__PerishableItem__PriceAssignment_5");
			builder.put(grammarAccess.getPerishableItemAccess().getQuantityAssignment_8(), "rule__PerishableItem__QuantityAssignment_8");
			builder.put(grammarAccess.getPerishableItemAccess().getExperationDateAssignment_11(), "rule__PerishableItem__ExperationDateAssignment_11");
			builder.put(grammarAccess.getNonFoodItemAccess().getNameAssignment_1(), "rule__NonFoodItem__NameAssignment_1");
			builder.put(grammarAccess.getNonFoodItemAccess().getPriceAssignment_5(), "rule__NonFoodItem__PriceAssignment_5");
			builder.put(grammarAccess.getNonFoodItemAccess().getQuantityAssignment_8(), "rule__NonFoodItem__QuantityAssignment_8");
			builder.put(grammarAccess.getDriverAccess().getNameAssignment_1(), "rule__Driver__NameAssignment_1");
			builder.put(grammarAccess.getDriverAccess().getDriverNameAssignment_5(), "rule__Driver__DriverNameAssignment_5");
			builder.put(grammarAccess.getDriverAccess().getVehicleAssignment_6(), "rule__Driver__VehicleAssignment_6");
			builder.put(grammarAccess.getDriverAccess().getDeliveryAssignment_7(), "rule__Driver__DeliveryAssignment_7");
			builder.put(grammarAccess.getEmployeeAccess().getNameAssignment_1(), "rule__Employee__NameAssignment_1");
			builder.put(grammarAccess.getEmployeeAccess().getEmployeeNameAssignment_5(), "rule__Employee__EmployeeNameAssignment_5");
			builder.put(grammarAccess.getEmployeeAccess().getStockMovementAssignment_6(), "rule__Employee__StockMovementAssignment_6");
			builder.put(grammarAccess.getCustomerAccess().getNameAssignment_1(), "rule__Customer__NameAssignment_1");
			builder.put(grammarAccess.getCustomerAccess().getCustomerNameAssignment_5(), "rule__Customer__CustomerNameAssignment_5");
			builder.put(grammarAccess.getCustomerAccess().getSaleAssignment_6(), "rule__Customer__SaleAssignment_6");
			builder.put(grammarAccess.getSupplierAccess().getNameAssignment_1(), "rule__Supplier__NameAssignment_1");
			builder.put(grammarAccess.getSupplierAccess().getItemsAssignment_3(), "rule__Supplier__ItemsAssignment_3");
			builder.put(grammarAccess.getVehicleAccess().getNameAssignment_1(), "rule__Vehicle__NameAssignment_1");
			builder.put(grammarAccess.getVehicleAccess().getPlateNumberAssignment_5(), "rule__Vehicle__PlateNumberAssignment_5");
			builder.put(grammarAccess.getVehicleAccess().getDeliveryAssignment_6(), "rule__Vehicle__DeliveryAssignment_6");
			builder.put(grammarAccess.getDeliveryAccess().getNameAssignment_1(), "rule__Delivery__NameAssignment_1");
			builder.put(grammarAccess.getDeliveryAccess().getFromWarehouseAssignment_5(), "rule__Delivery__FromWarehouseAssignment_5");
			builder.put(grammarAccess.getDeliveryAccess().getToStoreAssignment_8(), "rule__Delivery__ToStoreAssignment_8");
			builder.put(grammarAccess.getDeliveryAccess().getItemsAssignment_9(), "rule__Delivery__ItemsAssignment_9");
			builder.put(grammarAccess.getSaleAccess().getNameAssignment_1(), "rule__Sale__NameAssignment_1");
			builder.put(grammarAccess.getSaleAccess().getFromShelfAssignment_5(), "rule__Sale__FromShelfAssignment_5");
			builder.put(grammarAccess.getSaleAccess().getItemsAssignment_6(), "rule__Sale__ItemsAssignment_6");
			builder.put(grammarAccess.getStockMovementAccess().getNameAssignment_1(), "rule__StockMovement__NameAssignment_1");
			builder.put(grammarAccess.getStockMovementAccess().getFromBackroomAssignment_5(), "rule__StockMovement__FromBackroomAssignment_5");
			builder.put(grammarAccess.getStockMovementAccess().getToShelfAssignment_8(), "rule__StockMovement__ToShelfAssignment_8");
			builder.put(grammarAccess.getStockMovementAccess().getItemsAssignment_9(), "rule__StockMovement__ItemsAssignment_9");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private GroceryGrammarAccess grammarAccess;

	@Override
	protected InternalGroceryParser createParser() {
		InternalGroceryParser result = new InternalGroceryParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public GroceryGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(GroceryGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
