/*
 * generated by Xtext 2.15.0
 */
grammar InternalGrocery;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.project439.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.project439.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.project439.services.GroceryGrammarAccess;

}

@parser::members {

 	private GroceryGrammarAccess grammarAccess;

    public InternalGroceryParser(TokenStream input, GroceryGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Grocery";
   	}

   	@Override
   	protected GroceryGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleGrocery
entryRuleGrocery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGroceryRule()); }
	iv_ruleGrocery=ruleGrocery
	{ $current=$iv_ruleGrocery.current; }
	EOF;

// Rule Grocery
ruleGrocery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getGroceryAccess().getElementsBuildingParserRuleCall_0_0());
				}
				lv_elements_0_0=ruleBuilding
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroceryRule());
					}
					add(
						$current,
						"elements",
						lv_elements_0_0,
						"org.xtext.project439.Grocery.Building");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getGroceryAccess().getElementsDeliveryElementParserRuleCall_1_0());
				}
				lv_elements_1_0=ruleDeliveryElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGroceryRule());
					}
					add(
						$current,
						"elements",
						lv_elements_1_0,
						"org.xtext.project439.Grocery.DeliveryElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleBuilding
entryRuleBuilding returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBuildingRule()); }
	iv_ruleBuilding=ruleBuilding
	{ $current=$iv_ruleBuilding.current; }
	EOF;

// Rule Building
ruleBuilding returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBuildingAccess().getStoreParserRuleCall_0());
		}
		this_Store_0=ruleStore
		{
			$current = $this_Store_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBuildingAccess().getWarehouseParserRuleCall_1());
		}
		this_Warehouse_1=ruleWarehouse
		{
			$current = $this_Warehouse_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDeliveryElement
entryRuleDeliveryElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeliveryElementRule()); }
	iv_ruleDeliveryElement=ruleDeliveryElement
	{ $current=$iv_ruleDeliveryElement.current; }
	EOF;

// Rule DeliveryElement
ruleDeliveryElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeliveryElementAccess().getDriverParserRuleCall_0());
		}
		this_Driver_0=ruleDriver
		{
			$current = $this_Driver_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeliveryElementAccess().getVehicleParserRuleCall_1());
		}
		this_Vehicle_1=ruleVehicle
		{
			$current = $this_Vehicle_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStore
entryRuleStore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoreRule()); }
	iv_ruleStore=ruleStore
	{ $current=$iv_ruleStore.current; }
	EOF;

// Rule Store
ruleStore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='store'
		{
			newLeafNode(otherlv_0, grammarAccess.getStoreAccess().getStoreKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStoreAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStoreRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getStoreAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStoreAccess().getElementsShelfParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleShelf
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoreRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"org.xtext.project439.Grocery.Shelf");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getStoreAccess().getElementsBackroomParserRuleCall_4_0());
				}
				lv_elements_4_0=ruleBackroom
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStoreRule());
					}
					add(
						$current,
						"elements",
						lv_elements_4_0,
						"org.xtext.project439.Grocery.Backroom");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getStoreAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleWarehouse
entryRuleWarehouse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWarehouseRule()); }
	iv_ruleWarehouse=ruleWarehouse
	{ $current=$iv_ruleWarehouse.current; }
	EOF;

// Rule Warehouse
ruleWarehouse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getWarehouseAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWarehouseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWarehouseAccess().getAddressAddressParserRuleCall_1_0());
				}
				lv_address_1_0=ruleAddress
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWarehouseRule());
					}
					add(
						$current,
						"address",
						lv_address_1_0,
						"org.xtext.project439.Grocery.Address");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getWarehouseAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWarehouseAccess().getElementsItemParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWarehouseRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"org.xtext.project439.Grocery.Item");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getWarehouseAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleShelf
entryRuleShelf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShelfRule()); }
	iv_ruleShelf=ruleShelf
	{ $current=$iv_ruleShelf.current; }
	EOF;

// Rule Shelf
ruleShelf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='shelf'
		{
			newLeafNode(otherlv_0, grammarAccess.getShelfAccess().getShelfKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getShelfAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getShelfRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getShelfAccess().getElementsItemParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShelfRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"org.xtext.project439.Grocery.Item");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleBackroom
entryRuleBackroom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBackroomRule()); }
	iv_ruleBackroom=ruleBackroom
	{ $current=$iv_ruleBackroom.current; }
	EOF;

// Rule Backroom
ruleBackroom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='backroom'
		{
			newLeafNode(otherlv_0, grammarAccess.getBackroomAccess().getBackroomKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBackroomAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBackroomRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBackroomAccess().getElementsItemParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBackroomRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"org.xtext.project439.Grocery.Item");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleItem
entryRuleItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemRule()); }
	iv_ruleItem=ruleItem
	{ $current=$iv_ruleItem.current; }
	EOF;

// Rule Item
ruleItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getItemAccess().getPerishableItemParserRuleCall_0());
		}
		this_PerishableItem_0=rulePerishableItem
		{
			$current = $this_PerishableItem_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getItemAccess().getNonPerishableItemParserRuleCall_1());
		}
		this_NonPerishableItem_1=ruleNonPerishableItem
		{
			$current = $this_NonPerishableItem_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNonPerishableItem
entryRuleNonPerishableItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNonPerishableItemRule()); }
	iv_ruleNonPerishableItem=ruleNonPerishableItem
	{ $current=$iv_ruleNonPerishableItem.current; }
	EOF;

// Rule NonPerishableItem
ruleNonPerishableItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='nonPerishableItem'
		{
			newLeafNode(otherlv_0, grammarAccess.getNonPerishableItemAccess().getNonPerishableItemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getNonPerishableItemAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNonPerishableItemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_price_2_0=RULE_INT
				{
					newLeafNode(lv_price_2_0, grammarAccess.getNonPerishableItemAccess().getPriceINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNonPerishableItemRule());
					}
					setWithLastConsumed(
						$current,
						"price",
						lv_price_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRulePerishableItem
entryRulePerishableItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPerishableItemRule()); }
	iv_rulePerishableItem=rulePerishableItem
	{ $current=$iv_rulePerishableItem.current; }
	EOF;

// Rule PerishableItem
rulePerishableItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='perishableItem'
		{
			newLeafNode(otherlv_0, grammarAccess.getPerishableItemAccess().getPerishableItemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPerishableItemAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPerishableItemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPerishableItemAccess().getExperationDateExperationDateParserRuleCall_2_0());
				}
				lv_experationDate_2_0=ruleExperationDate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPerishableItemRule());
					}
					add(
						$current,
						"experationDate",
						lv_experationDate_2_0,
						"org.xtext.project439.Grocery.ExperationDate");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAddress
entryRuleAddress returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddressRule()); }
	iv_ruleAddress=ruleAddress
	{ $current=$iv_ruleAddress.current; }
	EOF;

// Rule Address
ruleAddress returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='street'
		{
			newLeafNode(otherlv_0, grammarAccess.getAddressAccess().getStreetKeyword_0());
		}
		(
			(
				lv_street_1_0=RULE_STRING
				{
					newLeafNode(lv_street_1_0, grammarAccess.getAddressAccess().getStreetSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddressRule());
					}
					setWithLastConsumed(
						$current,
						"street",
						lv_street_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='number'
		{
			newLeafNode(otherlv_2, grammarAccess.getAddressAccess().getNumberKeyword_2());
		}
		(
			(
				lv_number_3_0=RULE_INT
				{
					newLeafNode(lv_number_3_0, grammarAccess.getAddressAccess().getNumberINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddressRule());
					}
					setWithLastConsumed(
						$current,
						"number",
						lv_number_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4='city'
		{
			newLeafNode(otherlv_4, grammarAccess.getAddressAccess().getCityKeyword_4());
		}
		(
			(
				lv_city_5_0=RULE_STRING
				{
					newLeafNode(lv_city_5_0, grammarAccess.getAddressAccess().getCitySTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAddressRule());
					}
					setWithLastConsumed(
						$current,
						"city",
						lv_city_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleExperationDate
entryRuleExperationDate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExperationDateRule()); }
	iv_ruleExperationDate=ruleExperationDate
	{ $current=$iv_ruleExperationDate.current; }
	EOF;

// Rule ExperationDate
ruleExperationDate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='month'
		{
			newLeafNode(otherlv_0, grammarAccess.getExperationDateAccess().getMonthKeyword_0());
		}
		(
			(
				lv_month_1_0=RULE_INT
				{
					newLeafNode(lv_month_1_0, grammarAccess.getExperationDateAccess().getMonthINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExperationDateRule());
					}
					setWithLastConsumed(
						$current,
						"month",
						lv_month_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_2='day'
		{
			newLeafNode(otherlv_2, grammarAccess.getExperationDateAccess().getDayKeyword_2());
		}
		(
			(
				lv_day_3_0=RULE_INT
				{
					newLeafNode(lv_day_3_0, grammarAccess.getExperationDateAccess().getDayINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExperationDateRule());
					}
					setWithLastConsumed(
						$current,
						"day",
						lv_day_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4='year'
		{
			newLeafNode(otherlv_4, grammarAccess.getExperationDateAccess().getYearKeyword_4());
		}
		(
			(
				lv_year_5_0=RULE_INT
				{
					newLeafNode(lv_year_5_0, grammarAccess.getExperationDateAccess().getYearINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExperationDateRule());
					}
					setWithLastConsumed(
						$current,
						"year",
						lv_year_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleDriver
entryRuleDriver returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDriverRule()); }
	iv_ruleDriver=ruleDriver
	{ $current=$iv_ruleDriver.current; }
	EOF;

// Rule Driver
ruleDriver returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='driver'
		{
			newLeafNode(otherlv_0, grammarAccess.getDriverAccess().getDriverKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDriverAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDriverRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleVehicle
entryRuleVehicle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVehicleRule()); }
	iv_ruleVehicle=ruleVehicle
	{ $current=$iv_ruleVehicle.current; }
	EOF;

// Rule Vehicle
ruleVehicle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='vehicle'
		{
			newLeafNode(otherlv_0, grammarAccess.getVehicleAccess().getVehicleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVehicleAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVehicleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
