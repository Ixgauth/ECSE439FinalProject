/**
 * generated by Xtext 2.15.0
 */
package org.xtext.project439.grocery.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

import org.xtext.project439.grocery.Customer;
import org.xtext.project439.grocery.GroceryPackage;
import org.xtext.project439.grocery.Sale;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Customer</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.project439.grocery.impl.CustomerImpl#getCustomerName <em>Customer Name</em>}</li>
 *   <li>{@link org.xtext.project439.grocery.impl.CustomerImpl#getSale <em>Sale</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CustomerImpl extends PersonImpl implements Customer
{
  /**
   * The default value of the '{@link #getCustomerName() <em>Customer Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCustomerName()
   * @generated
   * @ordered
   */
  protected static final String CUSTOMER_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCustomerName() <em>Customer Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCustomerName()
   * @generated
   * @ordered
   */
  protected String customerName = CUSTOMER_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getSale() <em>Sale</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSale()
   * @generated
   * @ordered
   */
  protected EList<Sale> sale;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CustomerImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GroceryPackage.Literals.CUSTOMER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getCustomerName()
  {
    return customerName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCustomerName(String newCustomerName)
  {
    String oldCustomerName = customerName;
    customerName = newCustomerName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GroceryPackage.CUSTOMER__CUSTOMER_NAME, oldCustomerName, customerName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Sale> getSale()
  {
    if (sale == null)
    {
      sale = new EObjectResolvingEList<Sale>(Sale.class, this, GroceryPackage.CUSTOMER__SALE);
    }
    return sale;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GroceryPackage.CUSTOMER__CUSTOMER_NAME:
        return getCustomerName();
      case GroceryPackage.CUSTOMER__SALE:
        return getSale();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GroceryPackage.CUSTOMER__CUSTOMER_NAME:
        setCustomerName((String)newValue);
        return;
      case GroceryPackage.CUSTOMER__SALE:
        getSale().clear();
        getSale().addAll((Collection<? extends Sale>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GroceryPackage.CUSTOMER__CUSTOMER_NAME:
        setCustomerName(CUSTOMER_NAME_EDEFAULT);
        return;
      case GroceryPackage.CUSTOMER__SALE:
        getSale().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GroceryPackage.CUSTOMER__CUSTOMER_NAME:
        return CUSTOMER_NAME_EDEFAULT == null ? customerName != null : !CUSTOMER_NAME_EDEFAULT.equals(customerName);
      case GroceryPackage.CUSTOMER__SALE:
        return sale != null && !sale.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (customerName: ");
    result.append(customerName);
    result.append(')');
    return result.toString();
  }

} //CustomerImpl
