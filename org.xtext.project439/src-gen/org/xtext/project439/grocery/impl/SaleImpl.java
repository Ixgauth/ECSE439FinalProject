/**
 * generated by Xtext 2.15.0
 */
package org.xtext.project439.grocery.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.project439.grocery.GroceryPackage;
import org.xtext.project439.grocery.Sale;
import org.xtext.project439.grocery.Shelf;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sale</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.project439.grocery.impl.SaleImpl#getFromShelf <em>From Shelf</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SaleImpl extends MovementImpl implements Sale
{
  /**
   * The cached value of the '{@link #getFromShelf() <em>From Shelf</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFromShelf()
   * @generated
   * @ordered
   */
  protected Shelf fromShelf;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SaleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GroceryPackage.Literals.SALE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Shelf getFromShelf()
  {
    if (fromShelf != null && fromShelf.eIsProxy())
    {
      InternalEObject oldFromShelf = (InternalEObject)fromShelf;
      fromShelf = (Shelf)eResolveProxy(oldFromShelf);
      if (fromShelf != oldFromShelf)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GroceryPackage.SALE__FROM_SHELF, oldFromShelf, fromShelf));
      }
    }
    return fromShelf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Shelf basicGetFromShelf()
  {
    return fromShelf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFromShelf(Shelf newFromShelf)
  {
    Shelf oldFromShelf = fromShelf;
    fromShelf = newFromShelf;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GroceryPackage.SALE__FROM_SHELF, oldFromShelf, fromShelf));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GroceryPackage.SALE__FROM_SHELF:
        if (resolve) return getFromShelf();
        return basicGetFromShelf();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GroceryPackage.SALE__FROM_SHELF:
        setFromShelf((Shelf)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GroceryPackage.SALE__FROM_SHELF:
        setFromShelf((Shelf)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GroceryPackage.SALE__FROM_SHELF:
        return fromShelf != null;
    }
    return super.eIsSet(featureID);
  }

} //SaleImpl
