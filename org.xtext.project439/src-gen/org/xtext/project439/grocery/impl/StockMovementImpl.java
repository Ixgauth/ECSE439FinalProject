/**
 * generated by Xtext 2.15.0
 */
package org.xtext.project439.grocery.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.project439.grocery.Backroom;
import org.xtext.project439.grocery.GroceryPackage;
import org.xtext.project439.grocery.Shelf;
import org.xtext.project439.grocery.StockMovement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Stock Movement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.project439.grocery.impl.StockMovementImpl#getFromBackroom <em>From Backroom</em>}</li>
 *   <li>{@link org.xtext.project439.grocery.impl.StockMovementImpl#getToShelf <em>To Shelf</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StockMovementImpl extends MovementImpl implements StockMovement
{
  /**
   * The cached value of the '{@link #getFromBackroom() <em>From Backroom</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFromBackroom()
   * @generated
   * @ordered
   */
  protected Backroom fromBackroom;

  /**
   * The cached value of the '{@link #getToShelf() <em>To Shelf</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getToShelf()
   * @generated
   * @ordered
   */
  protected Shelf toShelf;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StockMovementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GroceryPackage.Literals.STOCK_MOVEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Backroom getFromBackroom()
  {
    if (fromBackroom != null && fromBackroom.eIsProxy())
    {
      InternalEObject oldFromBackroom = (InternalEObject)fromBackroom;
      fromBackroom = (Backroom)eResolveProxy(oldFromBackroom);
      if (fromBackroom != oldFromBackroom)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GroceryPackage.STOCK_MOVEMENT__FROM_BACKROOM, oldFromBackroom, fromBackroom));
      }
    }
    return fromBackroom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Backroom basicGetFromBackroom()
  {
    return fromBackroom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFromBackroom(Backroom newFromBackroom)
  {
    Backroom oldFromBackroom = fromBackroom;
    fromBackroom = newFromBackroom;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GroceryPackage.STOCK_MOVEMENT__FROM_BACKROOM, oldFromBackroom, fromBackroom));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Shelf getToShelf()
  {
    if (toShelf != null && toShelf.eIsProxy())
    {
      InternalEObject oldToShelf = (InternalEObject)toShelf;
      toShelf = (Shelf)eResolveProxy(oldToShelf);
      if (toShelf != oldToShelf)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, GroceryPackage.STOCK_MOVEMENT__TO_SHELF, oldToShelf, toShelf));
      }
    }
    return toShelf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Shelf basicGetToShelf()
  {
    return toShelf;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setToShelf(Shelf newToShelf)
  {
    Shelf oldToShelf = toShelf;
    toShelf = newToShelf;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GroceryPackage.STOCK_MOVEMENT__TO_SHELF, oldToShelf, toShelf));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GroceryPackage.STOCK_MOVEMENT__FROM_BACKROOM:
        if (resolve) return getFromBackroom();
        return basicGetFromBackroom();
      case GroceryPackage.STOCK_MOVEMENT__TO_SHELF:
        if (resolve) return getToShelf();
        return basicGetToShelf();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GroceryPackage.STOCK_MOVEMENT__FROM_BACKROOM:
        setFromBackroom((Backroom)newValue);
        return;
      case GroceryPackage.STOCK_MOVEMENT__TO_SHELF:
        setToShelf((Shelf)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GroceryPackage.STOCK_MOVEMENT__FROM_BACKROOM:
        setFromBackroom((Backroom)null);
        return;
      case GroceryPackage.STOCK_MOVEMENT__TO_SHELF:
        setToShelf((Shelf)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GroceryPackage.STOCK_MOVEMENT__FROM_BACKROOM:
        return fromBackroom != null;
      case GroceryPackage.STOCK_MOVEMENT__TO_SHELF:
        return toShelf != null;
    }
    return super.eIsSet(featureID);
  }

} //StockMovementImpl
