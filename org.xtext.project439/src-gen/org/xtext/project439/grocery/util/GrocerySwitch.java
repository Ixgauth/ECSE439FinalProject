/**
 * generated by Xtext 2.15.0
 */
package org.xtext.project439.grocery.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.project439.grocery.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.project439.grocery.GroceryPackage
 * @generated
 */
public class GrocerySwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static GroceryPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GrocerySwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = GroceryPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case GroceryPackage.GROCERY:
      {
        Grocery grocery = (Grocery)theEObject;
        T result = caseGrocery(grocery);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.ABSTRACT_ELEMENT:
      {
        AbstractElement abstractElement = (AbstractElement)theEObject;
        T result = caseAbstractElement(abstractElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.BUILDING:
      {
        Building building = (Building)theEObject;
        T result = caseBuilding(building);
        if (result == null) result = caseAbstractElement(building);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.STORE_ELEMENTS:
      {
        StoreElements storeElements = (StoreElements)theEObject;
        T result = caseStoreElements(storeElements);
        if (result == null) result = caseAbstractElement(storeElements);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.MOVEMENT_ELEMENT:
      {
        MovementElement movementElement = (MovementElement)theEObject;
        T result = caseMovementElement(movementElement);
        if (result == null) result = caseAbstractElement(movementElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.PERSON:
      {
        Person person = (Person)theEObject;
        T result = casePerson(person);
        if (result == null) result = caseMovementElement(person);
        if (result == null) result = caseAbstractElement(person);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.ITEM:
      {
        Item item = (Item)theEObject;
        T result = caseItem(item);
        if (result == null) result = caseAbstractElement(item);
        if (result == null) result = caseVehicleElements(item);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.FOOD_ITEM:
      {
        FoodItem foodItem = (FoodItem)theEObject;
        T result = caseFoodItem(foodItem);
        if (result == null) result = caseItem(foodItem);
        if (result == null) result = caseAbstractElement(foodItem);
        if (result == null) result = caseVehicleElements(foodItem);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.MOVEMENT:
      {
        Movement movement = (Movement)theEObject;
        T result = caseMovement(movement);
        if (result == null) result = caseAbstractElement(movement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.VEHICLE_ELEMENTS:
      {
        VehicleElements vehicleElements = (VehicleElements)theEObject;
        T result = caseVehicleElements(vehicleElements);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.STORE:
      {
        Store store = (Store)theEObject;
        T result = caseStore(store);
        if (result == null) result = caseBuilding(store);
        if (result == null) result = caseAbstractElement(store);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.WAREHOUSE:
      {
        Warehouse warehouse = (Warehouse)theEObject;
        T result = caseWarehouse(warehouse);
        if (result == null) result = caseBuilding(warehouse);
        if (result == null) result = caseAbstractElement(warehouse);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.SHELF:
      {
        Shelf shelf = (Shelf)theEObject;
        T result = caseShelf(shelf);
        if (result == null) result = caseStoreElements(shelf);
        if (result == null) result = caseAbstractElement(shelf);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.BACKROOM:
      {
        Backroom backroom = (Backroom)theEObject;
        T result = caseBackroom(backroom);
        if (result == null) result = caseStoreElements(backroom);
        if (result == null) result = caseAbstractElement(backroom);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.PRODUCE:
      {
        Produce produce = (Produce)theEObject;
        T result = caseProduce(produce);
        if (result == null) result = caseFoodItem(produce);
        if (result == null) result = caseItem(produce);
        if (result == null) result = caseAbstractElement(produce);
        if (result == null) result = caseVehicleElements(produce);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.PERISHABLE_ITEM:
      {
        PerishableItem perishableItem = (PerishableItem)theEObject;
        T result = casePerishableItem(perishableItem);
        if (result == null) result = caseFoodItem(perishableItem);
        if (result == null) result = caseItem(perishableItem);
        if (result == null) result = caseAbstractElement(perishableItem);
        if (result == null) result = caseVehicleElements(perishableItem);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.NON_FOOD_ITEM:
      {
        NonFoodItem nonFoodItem = (NonFoodItem)theEObject;
        T result = caseNonFoodItem(nonFoodItem);
        if (result == null) result = caseItem(nonFoodItem);
        if (result == null) result = caseAbstractElement(nonFoodItem);
        if (result == null) result = caseVehicleElements(nonFoodItem);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.DRIVER:
      {
        Driver driver = (Driver)theEObject;
        T result = caseDriver(driver);
        if (result == null) result = casePerson(driver);
        if (result == null) result = caseMovementElement(driver);
        if (result == null) result = caseAbstractElement(driver);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.EMPLOYEE:
      {
        Employee employee = (Employee)theEObject;
        T result = caseEmployee(employee);
        if (result == null) result = casePerson(employee);
        if (result == null) result = caseMovementElement(employee);
        if (result == null) result = caseAbstractElement(employee);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.CUSTOMER:
      {
        Customer customer = (Customer)theEObject;
        T result = caseCustomer(customer);
        if (result == null) result = casePerson(customer);
        if (result == null) result = caseMovementElement(customer);
        if (result == null) result = caseAbstractElement(customer);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.SUPPLIER:
      {
        Supplier supplier = (Supplier)theEObject;
        T result = caseSupplier(supplier);
        if (result == null) result = caseMovementElement(supplier);
        if (result == null) result = caseAbstractElement(supplier);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.VEHICLE:
      {
        Vehicle vehicle = (Vehicle)theEObject;
        T result = caseVehicle(vehicle);
        if (result == null) result = caseMovementElement(vehicle);
        if (result == null) result = caseAbstractElement(vehicle);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.DELIVERY:
      {
        Delivery delivery = (Delivery)theEObject;
        T result = caseDelivery(delivery);
        if (result == null) result = caseMovement(delivery);
        if (result == null) result = caseVehicleElements(delivery);
        if (result == null) result = caseAbstractElement(delivery);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.SALE:
      {
        Sale sale = (Sale)theEObject;
        T result = caseSale(sale);
        if (result == null) result = caseMovement(sale);
        if (result == null) result = caseAbstractElement(sale);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case GroceryPackage.STOCK_MOVEMENT:
      {
        StockMovement stockMovement = (StockMovement)theEObject;
        T result = caseStockMovement(stockMovement);
        if (result == null) result = caseMovement(stockMovement);
        if (result == null) result = caseAbstractElement(stockMovement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Grocery</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Grocery</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGrocery(Grocery object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Abstract Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Abstract Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAbstractElement(AbstractElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Building</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Building</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBuilding(Building object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Store Elements</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Store Elements</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStoreElements(StoreElements object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Movement Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Movement Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMovementElement(MovementElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Person</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Person</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePerson(Person object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Item</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Item</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseItem(Item object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Food Item</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Food Item</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFoodItem(FoodItem object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Movement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Movement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMovement(Movement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Vehicle Elements</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Vehicle Elements</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVehicleElements(VehicleElements object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Store</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Store</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStore(Store object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Warehouse</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Warehouse</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWarehouse(Warehouse object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Shelf</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Shelf</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseShelf(Shelf object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Backroom</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Backroom</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseBackroom(Backroom object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Produce</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Produce</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProduce(Produce object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Perishable Item</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Perishable Item</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePerishableItem(PerishableItem object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Non Food Item</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Non Food Item</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNonFoodItem(NonFoodItem object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Driver</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Driver</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDriver(Driver object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Employee</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Employee</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEmployee(Employee object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Customer</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Customer</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCustomer(Customer object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Supplier</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Supplier</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSupplier(Supplier object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Vehicle</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Vehicle</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVehicle(Vehicle object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Delivery</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Delivery</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDelivery(Delivery object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sale</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sale</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSale(Sale object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Stock Movement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Stock Movement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStockMovement(StockMovement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //GrocerySwitch
