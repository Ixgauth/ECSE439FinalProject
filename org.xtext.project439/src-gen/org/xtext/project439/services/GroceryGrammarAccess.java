/*
 * generated by Xtext 2.15.0
 */
package org.xtext.project439.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class GroceryGrammarAccess extends AbstractGrammarElementFinder {
	
	public class GroceryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.Grocery");
		private final Assignment cElementsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementsAbstractElementParserRuleCall_0 = (RuleCall)cElementsAssignment.eContents().get(0);
		
		//Grocery:
		//	elements+=AbstractElement*;
		@Override public ParserRule getRule() { return rule; }
		
		//elements+=AbstractElement*
		public Assignment getElementsAssignment() { return cElementsAssignment; }
		
		//AbstractElement
		public RuleCall getElementsAbstractElementParserRuleCall_0() { return cElementsAbstractElementParserRuleCall_0; }
	}
	public class AbstractElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.AbstractElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBuildingParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMovementElementParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMovementParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cItemParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cStoreElementsParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//AbstractElement:
		//	Building | MovementElement | Movement | Item | StoreElements;
		@Override public ParserRule getRule() { return rule; }
		
		//Building | MovementElement | Movement | Item | StoreElements
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Building
		public RuleCall getBuildingParserRuleCall_0() { return cBuildingParserRuleCall_0; }
		
		//MovementElement
		public RuleCall getMovementElementParserRuleCall_1() { return cMovementElementParserRuleCall_1; }
		
		//Movement
		public RuleCall getMovementParserRuleCall_2() { return cMovementParserRuleCall_2; }
		
		//Item
		public RuleCall getItemParserRuleCall_3() { return cItemParserRuleCall_3; }
		
		//StoreElements
		public RuleCall getStoreElementsParserRuleCall_4() { return cStoreElementsParserRuleCall_4; }
	}
	public class BuildingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.Building");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStoreParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWarehouseParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Building:
		//	Store | Warehouse;
		@Override public ParserRule getRule() { return rule; }
		
		//Store | Warehouse
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Store
		public RuleCall getStoreParserRuleCall_0() { return cStoreParserRuleCall_0; }
		
		//Warehouse
		public RuleCall getWarehouseParserRuleCall_1() { return cWarehouseParserRuleCall_1; }
	}
	public class StoreElementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.StoreElements");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBackroomParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cShelfParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//StoreElements:
		//	Backroom | Shelf;
		@Override public ParserRule getRule() { return rule; }
		
		//Backroom | Shelf
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Backroom
		public RuleCall getBackroomParserRuleCall_0() { return cBackroomParserRuleCall_0; }
		
		//Shelf
		public RuleCall getShelfParserRuleCall_1() { return cShelfParserRuleCall_1; }
	}
	public class MovementElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.MovementElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPersonParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVehicleParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSupplierParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//MovementElement:
		//	Person | Vehicle | Supplier;
		@Override public ParserRule getRule() { return rule; }
		
		//Person | Vehicle | Supplier
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Person
		public RuleCall getPersonParserRuleCall_0() { return cPersonParserRuleCall_0; }
		
		//Vehicle
		public RuleCall getVehicleParserRuleCall_1() { return cVehicleParserRuleCall_1; }
		
		//Supplier
		public RuleCall getSupplierParserRuleCall_2() { return cSupplierParserRuleCall_2; }
	}
	public class PersonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.Person");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDriverParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEmployeeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCustomerParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Person:
		//	Driver | Employee | Customer;
		@Override public ParserRule getRule() { return rule; }
		
		//Driver | Employee | Customer
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Driver
		public RuleCall getDriverParserRuleCall_0() { return cDriverParserRuleCall_0; }
		
		//Employee
		public RuleCall getEmployeeParserRuleCall_1() { return cEmployeeParserRuleCall_1; }
		
		//Customer
		public RuleCall getCustomerParserRuleCall_2() { return cCustomerParserRuleCall_2; }
	}
	public class ItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.Item");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFoodItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNonFoodItemParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Item:
		//	FoodItem | NonFoodItem;
		@Override public ParserRule getRule() { return rule; }
		
		//FoodItem | NonFoodItem
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FoodItem
		public RuleCall getFoodItemParserRuleCall_0() { return cFoodItemParserRuleCall_0; }
		
		//NonFoodItem
		public RuleCall getNonFoodItemParserRuleCall_1() { return cNonFoodItemParserRuleCall_1; }
	}
	public class FoodItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.FoodItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPerishableItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cProduceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//FoodItem:
		//	PerishableItem | Produce;
		@Override public ParserRule getRule() { return rule; }
		
		//PerishableItem | Produce
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PerishableItem
		public RuleCall getPerishableItemParserRuleCall_0() { return cPerishableItemParserRuleCall_0; }
		
		//Produce
		public RuleCall getProduceParserRuleCall_1() { return cProduceParserRuleCall_1; }
	}
	public class MovementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.Movement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDeliveryParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSaleParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cStockMovementParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Movement:
		//	Delivery | Sale | StockMovement;
		@Override public ParserRule getRule() { return rule; }
		
		//Delivery | Sale | StockMovement
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Delivery
		public RuleCall getDeliveryParserRuleCall_0() { return cDeliveryParserRuleCall_0; }
		
		//Sale
		public RuleCall getSaleParserRuleCall_1() { return cSaleParserRuleCall_1; }
		
		//StockMovement
		public RuleCall getStockMovementParserRuleCall_2() { return cStockMovementParserRuleCall_2; }
	}
	public class VehicleElementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.VehicleElements");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cItemParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDeliveryParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//VehicleElements:
		//	Item | Delivery;
		@Override public ParserRule getRule() { return rule; }
		
		//Item | Delivery
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Item
		public RuleCall getItemParserRuleCall_0() { return cItemParserRuleCall_0; }
		
		//Delivery
		public RuleCall getDeliveryParserRuleCall_1() { return cDeliveryParserRuleCall_1; }
	}
	public class StoreElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.Store");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStoreKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cElementsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cElementsStoreElementsCrossReference_3_0 = (CrossReference)cElementsAssignment_3.eContents().get(0);
		private final RuleCall cElementsStoreElementsIDTerminalRuleCall_3_0_1 = (RuleCall)cElementsStoreElementsCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Store:
		//	'store' name=ID '{'
		//	elements+=[StoreElements]*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'store' name=ID '{' elements+=[StoreElements]* '}'
		public Group getGroup() { return cGroup; }
		
		//'store'
		public Keyword getStoreKeyword_0() { return cStoreKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//elements+=[StoreElements]*
		public Assignment getElementsAssignment_3() { return cElementsAssignment_3; }
		
		//[StoreElements]
		public CrossReference getElementsStoreElementsCrossReference_3_0() { return cElementsStoreElementsCrossReference_3_0; }
		
		//ID
		public RuleCall getElementsStoreElementsIDTerminalRuleCall_3_0_1() { return cElementsStoreElementsIDTerminalRuleCall_3_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class WarehouseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.Warehouse");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWarehouseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cAddressKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAddressAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAddressADDRESSParserRuleCall_5_0 = (RuleCall)cAddressAssignment_5.eContents().get(0);
		private final Keyword cSupplierKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSupplierAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cSupplierSupplierCrossReference_8_0 = (CrossReference)cSupplierAssignment_8.eContents().get(0);
		private final RuleCall cSupplierSupplierIDTerminalRuleCall_8_0_1 = (RuleCall)cSupplierSupplierCrossReference_8_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Warehouse:
		//	'warehouse' name=ID '{'
		//	'address' ':' address=ADDRESS
		//	'supplier' ':' supplier=[Supplier]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'warehouse' name=ID '{' 'address' ':' address=ADDRESS 'supplier' ':' supplier=[Supplier] '}'
		public Group getGroup() { return cGroup; }
		
		//'warehouse'
		public Keyword getWarehouseKeyword_0() { return cWarehouseKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'address'
		public Keyword getAddressKeyword_3() { return cAddressKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//address=ADDRESS
		public Assignment getAddressAssignment_5() { return cAddressAssignment_5; }
		
		//ADDRESS
		public RuleCall getAddressADDRESSParserRuleCall_5_0() { return cAddressADDRESSParserRuleCall_5_0; }
		
		//'supplier'
		public Keyword getSupplierKeyword_6() { return cSupplierKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//supplier=[Supplier]
		public Assignment getSupplierAssignment_8() { return cSupplierAssignment_8; }
		
		//[Supplier]
		public CrossReference getSupplierSupplierCrossReference_8_0() { return cSupplierSupplierCrossReference_8_0; }
		
		//ID
		public RuleCall getSupplierSupplierIDTerminalRuleCall_8_0_1() { return cSupplierSupplierIDTerminalRuleCall_8_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class ShelfElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.Shelf");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cShelfKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cItemsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cItemsItemCrossReference_3_0 = (CrossReference)cItemsAssignment_3.eContents().get(0);
		private final RuleCall cItemsItemIDTerminalRuleCall_3_0_1 = (RuleCall)cItemsItemCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Shelf:
		//	'shelf' name=ID '{'
		//	items+=[Item]*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'shelf' name=ID '{' items+=[Item]* '}'
		public Group getGroup() { return cGroup; }
		
		//'shelf'
		public Keyword getShelfKeyword_0() { return cShelfKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//items+=[Item]*
		public Assignment getItemsAssignment_3() { return cItemsAssignment_3; }
		
		//[Item]
		public CrossReference getItemsItemCrossReference_3_0() { return cItemsItemCrossReference_3_0; }
		
		//ID
		public RuleCall getItemsItemIDTerminalRuleCall_3_0_1() { return cItemsItemIDTerminalRuleCall_3_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class BackroomElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.Backroom");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBackroomKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cItemsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cItemsItemCrossReference_3_0 = (CrossReference)cItemsAssignment_3.eContents().get(0);
		private final RuleCall cItemsItemIDTerminalRuleCall_3_0_1 = (RuleCall)cItemsItemCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Backroom:
		//	'backroom' name=ID '{'
		//	items+=[Item]*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'backroom' name=ID '{' items+=[Item]* '}'
		public Group getGroup() { return cGroup; }
		
		//'backroom'
		public Keyword getBackroomKeyword_0() { return cBackroomKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//items+=[Item]*
		public Assignment getItemsAssignment_3() { return cItemsAssignment_3; }
		
		//[Item]
		public CrossReference getItemsItemCrossReference_3_0() { return cItemsItemCrossReference_3_0; }
		
		//ID
		public RuleCall getItemsItemIDTerminalRuleCall_3_0_1() { return cItemsItemIDTerminalRuleCall_3_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ProduceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.Produce");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProduceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPriceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPriceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPriceDECIMALParserRuleCall_5_0 = (RuleCall)cPriceAssignment_5.eContents().get(0);
		private final Keyword cQuantityKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cQuantityAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cQuantityINTTerminalRuleCall_8_0 = (RuleCall)cQuantityAssignment_8.eContents().get(0);
		private final Keyword cQualityKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cColonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cQualityAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cQualityQualityLevelEnumRuleCall_11_0 = (RuleCall)cQualityAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Produce:
		//	'produce' name=ID '{'
		//	'price' ':' price=DECIMAL
		//	'quantity' ':' quantity=INT
		//	'quality' ':' quality=qualityLevel
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'produce' name=ID '{' 'price' ':' price=DECIMAL 'quantity' ':' quantity=INT 'quality' ':' quality=qualityLevel '}'
		public Group getGroup() { return cGroup; }
		
		//'produce'
		public Keyword getProduceKeyword_0() { return cProduceKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'price'
		public Keyword getPriceKeyword_3() { return cPriceKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//price=DECIMAL
		public Assignment getPriceAssignment_5() { return cPriceAssignment_5; }
		
		//DECIMAL
		public RuleCall getPriceDECIMALParserRuleCall_5_0() { return cPriceDECIMALParserRuleCall_5_0; }
		
		//'quantity'
		public Keyword getQuantityKeyword_6() { return cQuantityKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//quantity=INT
		public Assignment getQuantityAssignment_8() { return cQuantityAssignment_8; }
		
		//INT
		public RuleCall getQuantityINTTerminalRuleCall_8_0() { return cQuantityINTTerminalRuleCall_8_0; }
		
		//'quality'
		public Keyword getQualityKeyword_9() { return cQualityKeyword_9; }
		
		//':'
		public Keyword getColonKeyword_10() { return cColonKeyword_10; }
		
		//quality=qualityLevel
		public Assignment getQualityAssignment_11() { return cQualityAssignment_11; }
		
		//qualityLevel
		public RuleCall getQualityQualityLevelEnumRuleCall_11_0() { return cQualityQualityLevelEnumRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class PerishableItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.PerishableItem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPerishableItemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPriceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPriceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPriceDECIMALParserRuleCall_5_0 = (RuleCall)cPriceAssignment_5.eContents().get(0);
		private final Keyword cQuantityKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cQuantityAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cQuantityINTTerminalRuleCall_8_0 = (RuleCall)cQuantityAssignment_8.eContents().get(0);
		private final Keyword cExperationDateKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cColonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cExperationDateAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cExperationDateDATEParserRuleCall_11_0 = (RuleCall)cExperationDateAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//PerishableItem:
		//	'perishableItem' name=ID '{'
		//	'price' ':' price=DECIMAL
		//	'quantity' ':' quantity=INT
		//	'experationDate' ':' experationDate=DATE
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'perishableItem' name=ID '{' 'price' ':' price=DECIMAL 'quantity' ':' quantity=INT 'experationDate' ':'
		//experationDate=DATE '}'
		public Group getGroup() { return cGroup; }
		
		//'perishableItem'
		public Keyword getPerishableItemKeyword_0() { return cPerishableItemKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'price'
		public Keyword getPriceKeyword_3() { return cPriceKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//price=DECIMAL
		public Assignment getPriceAssignment_5() { return cPriceAssignment_5; }
		
		//DECIMAL
		public RuleCall getPriceDECIMALParserRuleCall_5_0() { return cPriceDECIMALParserRuleCall_5_0; }
		
		//'quantity'
		public Keyword getQuantityKeyword_6() { return cQuantityKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//quantity=INT
		public Assignment getQuantityAssignment_8() { return cQuantityAssignment_8; }
		
		//INT
		public RuleCall getQuantityINTTerminalRuleCall_8_0() { return cQuantityINTTerminalRuleCall_8_0; }
		
		//'experationDate'
		public Keyword getExperationDateKeyword_9() { return cExperationDateKeyword_9; }
		
		//':'
		public Keyword getColonKeyword_10() { return cColonKeyword_10; }
		
		//experationDate=DATE
		public Assignment getExperationDateAssignment_11() { return cExperationDateAssignment_11; }
		
		//DATE
		public RuleCall getExperationDateDATEParserRuleCall_11_0() { return cExperationDateDATEParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class NonFoodItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.NonFoodItem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNonFoodItemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPriceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPriceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPriceDECIMALParserRuleCall_5_0 = (RuleCall)cPriceAssignment_5.eContents().get(0);
		private final Keyword cQuantityKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cQuantityAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cQuantityINTTerminalRuleCall_8_0 = (RuleCall)cQuantityAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//NonFoodItem:
		//	'nonFoodItem' name=ID '{'
		//	'price' ':' price=DECIMAL
		//	'quantity' ':' quantity=INT
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'nonFoodItem' name=ID '{' 'price' ':' price=DECIMAL 'quantity' ':' quantity=INT '}'
		public Group getGroup() { return cGroup; }
		
		//'nonFoodItem'
		public Keyword getNonFoodItemKeyword_0() { return cNonFoodItemKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'price'
		public Keyword getPriceKeyword_3() { return cPriceKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//price=DECIMAL
		public Assignment getPriceAssignment_5() { return cPriceAssignment_5; }
		
		//DECIMAL
		public RuleCall getPriceDECIMALParserRuleCall_5_0() { return cPriceDECIMALParserRuleCall_5_0; }
		
		//'quantity'
		public Keyword getQuantityKeyword_6() { return cQuantityKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//quantity=INT
		public Assignment getQuantityAssignment_8() { return cQuantityAssignment_8; }
		
		//INT
		public RuleCall getQuantityINTTerminalRuleCall_8_0() { return cQuantityINTTerminalRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class DriverElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.Driver");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDriverKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDriverNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDriverNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cDriverNameAssignment_5.eContents().get(0);
		private final Assignment cVehicleAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cVehicleVehicleCrossReference_6_0 = (CrossReference)cVehicleAssignment_6.eContents().get(0);
		private final RuleCall cVehicleVehicleIDTerminalRuleCall_6_0_1 = (RuleCall)cVehicleVehicleCrossReference_6_0.eContents().get(1);
		private final Assignment cDeliveryAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cDeliveryDeliveryCrossReference_7_0 = (CrossReference)cDeliveryAssignment_7.eContents().get(0);
		private final RuleCall cDeliveryDeliveryIDTerminalRuleCall_7_0_1 = (RuleCall)cDeliveryDeliveryCrossReference_7_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Driver:
		//	'driver' name=ID '{'
		//	'name' ':' driverName=STRING
		//	vehicle+=[Vehicle] delivery+=[Delivery]*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'driver' name=ID '{' 'name' ':' driverName=STRING vehicle+=[Vehicle] delivery+=[Delivery]* '}'
		public Group getGroup() { return cGroup; }
		
		//'driver'
		public Keyword getDriverKeyword_0() { return cDriverKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'name'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//driverName=STRING
		public Assignment getDriverNameAssignment_5() { return cDriverNameAssignment_5; }
		
		//STRING
		public RuleCall getDriverNameSTRINGTerminalRuleCall_5_0() { return cDriverNameSTRINGTerminalRuleCall_5_0; }
		
		//vehicle+=[Vehicle]
		public Assignment getVehicleAssignment_6() { return cVehicleAssignment_6; }
		
		//[Vehicle]
		public CrossReference getVehicleVehicleCrossReference_6_0() { return cVehicleVehicleCrossReference_6_0; }
		
		//ID
		public RuleCall getVehicleVehicleIDTerminalRuleCall_6_0_1() { return cVehicleVehicleIDTerminalRuleCall_6_0_1; }
		
		//delivery+=[Delivery]*
		public Assignment getDeliveryAssignment_7() { return cDeliveryAssignment_7; }
		
		//[Delivery]
		public CrossReference getDeliveryDeliveryCrossReference_7_0() { return cDeliveryDeliveryCrossReference_7_0; }
		
		//ID
		public RuleCall getDeliveryDeliveryIDTerminalRuleCall_7_0_1() { return cDeliveryDeliveryIDTerminalRuleCall_7_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class EmployeeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.Employee");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEmployeeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEmployeeNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEmployeeNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cEmployeeNameAssignment_5.eContents().get(0);
		private final Assignment cStockMovementAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cStockMovementStockMovementCrossReference_6_0 = (CrossReference)cStockMovementAssignment_6.eContents().get(0);
		private final RuleCall cStockMovementStockMovementIDTerminalRuleCall_6_0_1 = (RuleCall)cStockMovementStockMovementCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Employee:
		//	'employee' name=ID '{'
		//	'name' ':' employeeName=STRING
		//	stockMovement+=[StockMovement]*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'employee' name=ID '{' 'name' ':' employeeName=STRING stockMovement+=[StockMovement]* '}'
		public Group getGroup() { return cGroup; }
		
		//'employee'
		public Keyword getEmployeeKeyword_0() { return cEmployeeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'name'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//employeeName=STRING
		public Assignment getEmployeeNameAssignment_5() { return cEmployeeNameAssignment_5; }
		
		//STRING
		public RuleCall getEmployeeNameSTRINGTerminalRuleCall_5_0() { return cEmployeeNameSTRINGTerminalRuleCall_5_0; }
		
		//stockMovement+=[StockMovement]*
		public Assignment getStockMovementAssignment_6() { return cStockMovementAssignment_6; }
		
		//[StockMovement]
		public CrossReference getStockMovementStockMovementCrossReference_6_0() { return cStockMovementStockMovementCrossReference_6_0; }
		
		//ID
		public RuleCall getStockMovementStockMovementIDTerminalRuleCall_6_0_1() { return cStockMovementStockMovementIDTerminalRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class CustomerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.Customer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCustomerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCustomerNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCustomerNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cCustomerNameAssignment_5.eContents().get(0);
		private final Assignment cSaleAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cSaleSaleCrossReference_6_0 = (CrossReference)cSaleAssignment_6.eContents().get(0);
		private final RuleCall cSaleSaleIDTerminalRuleCall_6_0_1 = (RuleCall)cSaleSaleCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Customer:
		//	'customer' name=ID '{'
		//	'name' ':' customerName=STRING
		//	sale+=[Sale]*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'customer' name=ID '{' 'name' ':' customerName=STRING sale+=[Sale]* '}'
		public Group getGroup() { return cGroup; }
		
		//'customer'
		public Keyword getCustomerKeyword_0() { return cCustomerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'name'
		public Keyword getNameKeyword_3() { return cNameKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//customerName=STRING
		public Assignment getCustomerNameAssignment_5() { return cCustomerNameAssignment_5; }
		
		//STRING
		public RuleCall getCustomerNameSTRINGTerminalRuleCall_5_0() { return cCustomerNameSTRINGTerminalRuleCall_5_0; }
		
		//sale+=[Sale]*
		public Assignment getSaleAssignment_6() { return cSaleAssignment_6; }
		
		//[Sale]
		public CrossReference getSaleSaleCrossReference_6_0() { return cSaleSaleCrossReference_6_0; }
		
		//ID
		public RuleCall getSaleSaleIDTerminalRuleCall_6_0_1() { return cSaleSaleIDTerminalRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class SupplierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.Supplier");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSupplierKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cItemsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cItemsItemCrossReference_3_0 = (CrossReference)cItemsAssignment_3.eContents().get(0);
		private final RuleCall cItemsItemIDTerminalRuleCall_3_0_1 = (RuleCall)cItemsItemCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Supplier:
		//	'supplier' name=ID '{'
		//	items+=[Item]*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'supplier' name=ID '{' items+=[Item]* '}'
		public Group getGroup() { return cGroup; }
		
		//'supplier'
		public Keyword getSupplierKeyword_0() { return cSupplierKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//items+=[Item]*
		public Assignment getItemsAssignment_3() { return cItemsAssignment_3; }
		
		//[Item]
		public CrossReference getItemsItemCrossReference_3_0() { return cItemsItemCrossReference_3_0; }
		
		//ID
		public RuleCall getItemsItemIDTerminalRuleCall_3_0_1() { return cItemsItemIDTerminalRuleCall_3_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class VehicleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.Vehicle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVehicleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPlateNumberKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPlateNumberAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPlateNumberSTRINGTerminalRuleCall_5_0 = (RuleCall)cPlateNumberAssignment_5.eContents().get(0);
		private final Assignment cDeliveryAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cDeliveryDeliveryCrossReference_6_0 = (CrossReference)cDeliveryAssignment_6.eContents().get(0);
		private final RuleCall cDeliveryDeliveryIDTerminalRuleCall_6_0_1 = (RuleCall)cDeliveryDeliveryCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Vehicle:
		//	'vehicle' name=ID '{'
		//	'plateNumber' ':' plateNumber=STRING
		//	delivery+=[Delivery]*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'vehicle' name=ID '{' 'plateNumber' ':' plateNumber=STRING delivery+=[Delivery]* '}'
		public Group getGroup() { return cGroup; }
		
		//'vehicle'
		public Keyword getVehicleKeyword_0() { return cVehicleKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'plateNumber'
		public Keyword getPlateNumberKeyword_3() { return cPlateNumberKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//plateNumber=STRING
		public Assignment getPlateNumberAssignment_5() { return cPlateNumberAssignment_5; }
		
		//STRING
		public RuleCall getPlateNumberSTRINGTerminalRuleCall_5_0() { return cPlateNumberSTRINGTerminalRuleCall_5_0; }
		
		//delivery+=[Delivery]*
		public Assignment getDeliveryAssignment_6() { return cDeliveryAssignment_6; }
		
		//[Delivery]
		public CrossReference getDeliveryDeliveryCrossReference_6_0() { return cDeliveryDeliveryCrossReference_6_0; }
		
		//ID
		public RuleCall getDeliveryDeliveryIDTerminalRuleCall_6_0_1() { return cDeliveryDeliveryIDTerminalRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class DeliveryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.Delivery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeliveryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cWarehouseKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFromWarehouseAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cFromWarehouseWarehouseCrossReference_5_0 = (CrossReference)cFromWarehouseAssignment_5.eContents().get(0);
		private final RuleCall cFromWarehouseWarehouseIDTerminalRuleCall_5_0_1 = (RuleCall)cFromWarehouseWarehouseCrossReference_5_0.eContents().get(1);
		private final Keyword cStoreKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cToStoreAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cToStoreStoreCrossReference_8_0 = (CrossReference)cToStoreAssignment_8.eContents().get(0);
		private final RuleCall cToStoreStoreIDTerminalRuleCall_8_0_1 = (RuleCall)cToStoreStoreCrossReference_8_0.eContents().get(1);
		private final Assignment cItemsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cItemsItemCrossReference_9_0 = (CrossReference)cItemsAssignment_9.eContents().get(0);
		private final RuleCall cItemsItemIDTerminalRuleCall_9_0_1 = (RuleCall)cItemsItemCrossReference_9_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Delivery:
		//	'delivery' name=ID '{'
		//	'warehouse' ':' fromWarehouse=[Warehouse]
		//	'store' ':' toStore=[Store] items+=[Item]*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'delivery' name=ID '{' 'warehouse' ':' fromWarehouse=[Warehouse] 'store' ':' toStore=[Store] items+=[Item]* '}'
		public Group getGroup() { return cGroup; }
		
		//'delivery'
		public Keyword getDeliveryKeyword_0() { return cDeliveryKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'warehouse'
		public Keyword getWarehouseKeyword_3() { return cWarehouseKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//fromWarehouse=[Warehouse]
		public Assignment getFromWarehouseAssignment_5() { return cFromWarehouseAssignment_5; }
		
		//[Warehouse]
		public CrossReference getFromWarehouseWarehouseCrossReference_5_0() { return cFromWarehouseWarehouseCrossReference_5_0; }
		
		//ID
		public RuleCall getFromWarehouseWarehouseIDTerminalRuleCall_5_0_1() { return cFromWarehouseWarehouseIDTerminalRuleCall_5_0_1; }
		
		//'store'
		public Keyword getStoreKeyword_6() { return cStoreKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//toStore=[Store]
		public Assignment getToStoreAssignment_8() { return cToStoreAssignment_8; }
		
		//[Store]
		public CrossReference getToStoreStoreCrossReference_8_0() { return cToStoreStoreCrossReference_8_0; }
		
		//ID
		public RuleCall getToStoreStoreIDTerminalRuleCall_8_0_1() { return cToStoreStoreIDTerminalRuleCall_8_0_1; }
		
		//items+=[Item]*
		public Assignment getItemsAssignment_9() { return cItemsAssignment_9; }
		
		//[Item]
		public CrossReference getItemsItemCrossReference_9_0() { return cItemsItemCrossReference_9_0; }
		
		//ID
		public RuleCall getItemsItemIDTerminalRuleCall_9_0_1() { return cItemsItemIDTerminalRuleCall_9_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class SaleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.Sale");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSaleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cShelfKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFromShelfAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cFromShelfShelfCrossReference_5_0 = (CrossReference)cFromShelfAssignment_5.eContents().get(0);
		private final RuleCall cFromShelfShelfIDTerminalRuleCall_5_0_1 = (RuleCall)cFromShelfShelfCrossReference_5_0.eContents().get(1);
		private final Assignment cItemsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cItemsItemCrossReference_6_0 = (CrossReference)cItemsAssignment_6.eContents().get(0);
		private final RuleCall cItemsItemIDTerminalRuleCall_6_0_1 = (RuleCall)cItemsItemCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Sale:
		//	'sale' name=ID '{'
		//	'shelf' ':' fromShelf=[Shelf] items+=[Item]*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'sale' name=ID '{' 'shelf' ':' fromShelf=[Shelf] items+=[Item]* '}'
		public Group getGroup() { return cGroup; }
		
		//'sale'
		public Keyword getSaleKeyword_0() { return cSaleKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'shelf'
		public Keyword getShelfKeyword_3() { return cShelfKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//fromShelf=[Shelf]
		public Assignment getFromShelfAssignment_5() { return cFromShelfAssignment_5; }
		
		//[Shelf]
		public CrossReference getFromShelfShelfCrossReference_5_0() { return cFromShelfShelfCrossReference_5_0; }
		
		//ID
		public RuleCall getFromShelfShelfIDTerminalRuleCall_5_0_1() { return cFromShelfShelfIDTerminalRuleCall_5_0_1; }
		
		//items+=[Item]*
		public Assignment getItemsAssignment_6() { return cItemsAssignment_6; }
		
		//[Item]
		public CrossReference getItemsItemCrossReference_6_0() { return cItemsItemCrossReference_6_0; }
		
		//ID
		public RuleCall getItemsItemIDTerminalRuleCall_6_0_1() { return cItemsItemIDTerminalRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class StockMovementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.StockMovement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStockKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cBackroomKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFromBackroomAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cFromBackroomBackroomCrossReference_5_0 = (CrossReference)cFromBackroomAssignment_5.eContents().get(0);
		private final RuleCall cFromBackroomBackroomIDTerminalRuleCall_5_0_1 = (RuleCall)cFromBackroomBackroomCrossReference_5_0.eContents().get(1);
		private final Keyword cShelfKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cToShelfAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cToShelfShelfCrossReference_8_0 = (CrossReference)cToShelfAssignment_8.eContents().get(0);
		private final RuleCall cToShelfShelfIDTerminalRuleCall_8_0_1 = (RuleCall)cToShelfShelfCrossReference_8_0.eContents().get(1);
		private final Assignment cItemsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cItemsItemCrossReference_9_0 = (CrossReference)cItemsAssignment_9.eContents().get(0);
		private final RuleCall cItemsItemIDTerminalRuleCall_9_0_1 = (RuleCall)cItemsItemCrossReference_9_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//StockMovement:
		//	'stock' name=ID '{'
		//	'backroom' ':' fromBackroom=[Backroom]
		//	'shelf' ':' toShelf=[Shelf] items+=[Item]*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'stock' name=ID '{' 'backroom' ':' fromBackroom=[Backroom] 'shelf' ':' toShelf=[Shelf] items+=[Item]* '}'
		public Group getGroup() { return cGroup; }
		
		//'stock'
		public Keyword getStockKeyword_0() { return cStockKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'backroom'
		public Keyword getBackroomKeyword_3() { return cBackroomKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//fromBackroom=[Backroom]
		public Assignment getFromBackroomAssignment_5() { return cFromBackroomAssignment_5; }
		
		//[Backroom]
		public CrossReference getFromBackroomBackroomCrossReference_5_0() { return cFromBackroomBackroomCrossReference_5_0; }
		
		//ID
		public RuleCall getFromBackroomBackroomIDTerminalRuleCall_5_0_1() { return cFromBackroomBackroomIDTerminalRuleCall_5_0_1; }
		
		//'shelf'
		public Keyword getShelfKeyword_6() { return cShelfKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//toShelf=[Shelf]
		public Assignment getToShelfAssignment_8() { return cToShelfAssignment_8; }
		
		//[Shelf]
		public CrossReference getToShelfShelfCrossReference_8_0() { return cToShelfShelfCrossReference_8_0; }
		
		//ID
		public RuleCall getToShelfShelfIDTerminalRuleCall_8_0_1() { return cToShelfShelfIDTerminalRuleCall_8_0_1; }
		
		//items+=[Item]*
		public Assignment getItemsAssignment_9() { return cItemsAssignment_9; }
		
		//[Item]
		public CrossReference getItemsItemCrossReference_9_0() { return cItemsItemCrossReference_9_0; }
		
		//ID
		public RuleCall getItemsItemIDTerminalRuleCall_9_0_1() { return cItemsItemIDTerminalRuleCall_9_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class DECIMALElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.DECIMAL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//DECIMAL:
		//	INT '.' INT;
		@Override public ParserRule getRule() { return rule; }
		
		//INT '.' INT
		public Group getGroup() { return cGroup; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}
	public class DATEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.DATE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cSolidusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cSolidusKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cINTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//DATE:
		//	INT '/' INT '/' INT;
		@Override public ParserRule getRule() { return rule; }
		
		//INT '/' INT '/' INT
		public Group getGroup() { return cGroup; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }
		
		//'/'
		public Keyword getSolidusKeyword_1() { return cSolidusKeyword_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
		
		//'/'
		public Keyword getSolidusKeyword_3() { return cSolidusKeyword_3; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4() { return cINTTerminalRuleCall_4; }
	}
	public class ADDRESSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.ADDRESS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cSTRINGTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ADDRESS:
		//	INT STRING ',' STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//INT STRING ',' STRING
		public Group getGroup() { return cGroup; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1() { return cSTRINGTerminalRuleCall_1; }
		
		//','
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_3() { return cSTRINGTerminalRuleCall_3; }
	}
	
	public class QualityLevelElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.project439.Grocery.qualityLevel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cGOODEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cGOODGoodKeyword_0_0 = (Keyword)cGOODEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMEDIOCREEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMEDIOCREOkayKeyword_1_0 = (Keyword)cMEDIOCREEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNEEDSREMOVALEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNEEDSREMOVALNeedsRemovalKeyword_2_0 = (Keyword)cNEEDSREMOVALEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum qualityLevel:
		//	GOOD="good" |
		//	MEDIOCRE="okay" |
		//	NEEDSREMOVAL="needs removal";
		public EnumRule getRule() { return rule; }
		
		//GOOD="good" | MEDIOCRE="okay" | NEEDSREMOVAL="needs removal"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GOOD="good"
		public EnumLiteralDeclaration getGOODEnumLiteralDeclaration_0() { return cGOODEnumLiteralDeclaration_0; }
		
		//"good"
		public Keyword getGOODGoodKeyword_0_0() { return cGOODGoodKeyword_0_0; }
		
		//MEDIOCRE="okay"
		public EnumLiteralDeclaration getMEDIOCREEnumLiteralDeclaration_1() { return cMEDIOCREEnumLiteralDeclaration_1; }
		
		//"okay"
		public Keyword getMEDIOCREOkayKeyword_1_0() { return cMEDIOCREOkayKeyword_1_0; }
		
		//NEEDSREMOVAL="needs removal"
		public EnumLiteralDeclaration getNEEDSREMOVALEnumLiteralDeclaration_2() { return cNEEDSREMOVALEnumLiteralDeclaration_2; }
		
		//"needs removal"
		public Keyword getNEEDSREMOVALNeedsRemovalKeyword_2_0() { return cNEEDSREMOVALNeedsRemovalKeyword_2_0; }
	}
	
	private final GroceryElements pGrocery;
	private final AbstractElementElements pAbstractElement;
	private final BuildingElements pBuilding;
	private final StoreElementsElements pStoreElements;
	private final MovementElementElements pMovementElement;
	private final PersonElements pPerson;
	private final ItemElements pItem;
	private final FoodItemElements pFoodItem;
	private final MovementElements pMovement;
	private final VehicleElementsElements pVehicleElements;
	private final StoreElements pStore;
	private final WarehouseElements pWarehouse;
	private final ShelfElements pShelf;
	private final BackroomElements pBackroom;
	private final ProduceElements pProduce;
	private final PerishableItemElements pPerishableItem;
	private final NonFoodItemElements pNonFoodItem;
	private final DriverElements pDriver;
	private final EmployeeElements pEmployee;
	private final CustomerElements pCustomer;
	private final SupplierElements pSupplier;
	private final VehicleElements pVehicle;
	private final DeliveryElements pDelivery;
	private final SaleElements pSale;
	private final StockMovementElements pStockMovement;
	private final DECIMALElements pDECIMAL;
	private final DATEElements pDATE;
	private final ADDRESSElements pADDRESS;
	private final QualityLevelElements eQualityLevel;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GroceryGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pGrocery = new GroceryElements();
		this.pAbstractElement = new AbstractElementElements();
		this.pBuilding = new BuildingElements();
		this.pStoreElements = new StoreElementsElements();
		this.pMovementElement = new MovementElementElements();
		this.pPerson = new PersonElements();
		this.pItem = new ItemElements();
		this.pFoodItem = new FoodItemElements();
		this.pMovement = new MovementElements();
		this.pVehicleElements = new VehicleElementsElements();
		this.pStore = new StoreElements();
		this.pWarehouse = new WarehouseElements();
		this.pShelf = new ShelfElements();
		this.pBackroom = new BackroomElements();
		this.pProduce = new ProduceElements();
		this.pPerishableItem = new PerishableItemElements();
		this.pNonFoodItem = new NonFoodItemElements();
		this.pDriver = new DriverElements();
		this.pEmployee = new EmployeeElements();
		this.pCustomer = new CustomerElements();
		this.pSupplier = new SupplierElements();
		this.pVehicle = new VehicleElements();
		this.pDelivery = new DeliveryElements();
		this.pSale = new SaleElements();
		this.pStockMovement = new StockMovementElements();
		this.pDECIMAL = new DECIMALElements();
		this.pDATE = new DATEElements();
		this.pADDRESS = new ADDRESSElements();
		this.eQualityLevel = new QualityLevelElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.project439.Grocery".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Grocery:
	//	elements+=AbstractElement*;
	public GroceryElements getGroceryAccess() {
		return pGrocery;
	}
	
	public ParserRule getGroceryRule() {
		return getGroceryAccess().getRule();
	}
	
	//AbstractElement:
	//	Building | MovementElement | Movement | Item | StoreElements;
	public AbstractElementElements getAbstractElementAccess() {
		return pAbstractElement;
	}
	
	public ParserRule getAbstractElementRule() {
		return getAbstractElementAccess().getRule();
	}
	
	//Building:
	//	Store | Warehouse;
	public BuildingElements getBuildingAccess() {
		return pBuilding;
	}
	
	public ParserRule getBuildingRule() {
		return getBuildingAccess().getRule();
	}
	
	//StoreElements:
	//	Backroom | Shelf;
	public StoreElementsElements getStoreElementsAccess() {
		return pStoreElements;
	}
	
	public ParserRule getStoreElementsRule() {
		return getStoreElementsAccess().getRule();
	}
	
	//MovementElement:
	//	Person | Vehicle | Supplier;
	public MovementElementElements getMovementElementAccess() {
		return pMovementElement;
	}
	
	public ParserRule getMovementElementRule() {
		return getMovementElementAccess().getRule();
	}
	
	//Person:
	//	Driver | Employee | Customer;
	public PersonElements getPersonAccess() {
		return pPerson;
	}
	
	public ParserRule getPersonRule() {
		return getPersonAccess().getRule();
	}
	
	//Item:
	//	FoodItem | NonFoodItem;
	public ItemElements getItemAccess() {
		return pItem;
	}
	
	public ParserRule getItemRule() {
		return getItemAccess().getRule();
	}
	
	//FoodItem:
	//	PerishableItem | Produce;
	public FoodItemElements getFoodItemAccess() {
		return pFoodItem;
	}
	
	public ParserRule getFoodItemRule() {
		return getFoodItemAccess().getRule();
	}
	
	//Movement:
	//	Delivery | Sale | StockMovement;
	public MovementElements getMovementAccess() {
		return pMovement;
	}
	
	public ParserRule getMovementRule() {
		return getMovementAccess().getRule();
	}
	
	//VehicleElements:
	//	Item | Delivery;
	public VehicleElementsElements getVehicleElementsAccess() {
		return pVehicleElements;
	}
	
	public ParserRule getVehicleElementsRule() {
		return getVehicleElementsAccess().getRule();
	}
	
	//Store:
	//	'store' name=ID '{'
	//	elements+=[StoreElements]*
	//	'}';
	public StoreElements getStoreAccess() {
		return pStore;
	}
	
	public ParserRule getStoreRule() {
		return getStoreAccess().getRule();
	}
	
	//Warehouse:
	//	'warehouse' name=ID '{'
	//	'address' ':' address=ADDRESS
	//	'supplier' ':' supplier=[Supplier]
	//	'}';
	public WarehouseElements getWarehouseAccess() {
		return pWarehouse;
	}
	
	public ParserRule getWarehouseRule() {
		return getWarehouseAccess().getRule();
	}
	
	//Shelf:
	//	'shelf' name=ID '{'
	//	items+=[Item]*
	//	'}';
	public ShelfElements getShelfAccess() {
		return pShelf;
	}
	
	public ParserRule getShelfRule() {
		return getShelfAccess().getRule();
	}
	
	//Backroom:
	//	'backroom' name=ID '{'
	//	items+=[Item]*
	//	'}';
	public BackroomElements getBackroomAccess() {
		return pBackroom;
	}
	
	public ParserRule getBackroomRule() {
		return getBackroomAccess().getRule();
	}
	
	//Produce:
	//	'produce' name=ID '{'
	//	'price' ':' price=DECIMAL
	//	'quantity' ':' quantity=INT
	//	'quality' ':' quality=qualityLevel
	//	'}';
	public ProduceElements getProduceAccess() {
		return pProduce;
	}
	
	public ParserRule getProduceRule() {
		return getProduceAccess().getRule();
	}
	
	//PerishableItem:
	//	'perishableItem' name=ID '{'
	//	'price' ':' price=DECIMAL
	//	'quantity' ':' quantity=INT
	//	'experationDate' ':' experationDate=DATE
	//	'}';
	public PerishableItemElements getPerishableItemAccess() {
		return pPerishableItem;
	}
	
	public ParserRule getPerishableItemRule() {
		return getPerishableItemAccess().getRule();
	}
	
	//NonFoodItem:
	//	'nonFoodItem' name=ID '{'
	//	'price' ':' price=DECIMAL
	//	'quantity' ':' quantity=INT
	//	'}';
	public NonFoodItemElements getNonFoodItemAccess() {
		return pNonFoodItem;
	}
	
	public ParserRule getNonFoodItemRule() {
		return getNonFoodItemAccess().getRule();
	}
	
	//Driver:
	//	'driver' name=ID '{'
	//	'name' ':' driverName=STRING
	//	vehicle+=[Vehicle] delivery+=[Delivery]*
	//	'}';
	public DriverElements getDriverAccess() {
		return pDriver;
	}
	
	public ParserRule getDriverRule() {
		return getDriverAccess().getRule();
	}
	
	//Employee:
	//	'employee' name=ID '{'
	//	'name' ':' employeeName=STRING
	//	stockMovement+=[StockMovement]*
	//	'}';
	public EmployeeElements getEmployeeAccess() {
		return pEmployee;
	}
	
	public ParserRule getEmployeeRule() {
		return getEmployeeAccess().getRule();
	}
	
	//Customer:
	//	'customer' name=ID '{'
	//	'name' ':' customerName=STRING
	//	sale+=[Sale]*
	//	'}';
	public CustomerElements getCustomerAccess() {
		return pCustomer;
	}
	
	public ParserRule getCustomerRule() {
		return getCustomerAccess().getRule();
	}
	
	//Supplier:
	//	'supplier' name=ID '{'
	//	items+=[Item]*
	//	'}';
	public SupplierElements getSupplierAccess() {
		return pSupplier;
	}
	
	public ParserRule getSupplierRule() {
		return getSupplierAccess().getRule();
	}
	
	//Vehicle:
	//	'vehicle' name=ID '{'
	//	'plateNumber' ':' plateNumber=STRING
	//	delivery+=[Delivery]*
	//	'}';
	public VehicleElements getVehicleAccess() {
		return pVehicle;
	}
	
	public ParserRule getVehicleRule() {
		return getVehicleAccess().getRule();
	}
	
	//Delivery:
	//	'delivery' name=ID '{'
	//	'warehouse' ':' fromWarehouse=[Warehouse]
	//	'store' ':' toStore=[Store] items+=[Item]*
	//	'}';
	public DeliveryElements getDeliveryAccess() {
		return pDelivery;
	}
	
	public ParserRule getDeliveryRule() {
		return getDeliveryAccess().getRule();
	}
	
	//Sale:
	//	'sale' name=ID '{'
	//	'shelf' ':' fromShelf=[Shelf] items+=[Item]*
	//	'}';
	public SaleElements getSaleAccess() {
		return pSale;
	}
	
	public ParserRule getSaleRule() {
		return getSaleAccess().getRule();
	}
	
	//StockMovement:
	//	'stock' name=ID '{'
	//	'backroom' ':' fromBackroom=[Backroom]
	//	'shelf' ':' toShelf=[Shelf] items+=[Item]*
	//	'}';
	public StockMovementElements getStockMovementAccess() {
		return pStockMovement;
	}
	
	public ParserRule getStockMovementRule() {
		return getStockMovementAccess().getRule();
	}
	
	//DECIMAL:
	//	INT '.' INT;
	public DECIMALElements getDECIMALAccess() {
		return pDECIMAL;
	}
	
	public ParserRule getDECIMALRule() {
		return getDECIMALAccess().getRule();
	}
	
	//DATE:
	//	INT '/' INT '/' INT;
	public DATEElements getDATEAccess() {
		return pDATE;
	}
	
	public ParserRule getDATERule() {
		return getDATEAccess().getRule();
	}
	
	//ADDRESS:
	//	INT STRING ',' STRING;
	public ADDRESSElements getADDRESSAccess() {
		return pADDRESS;
	}
	
	public ParserRule getADDRESSRule() {
		return getADDRESSAccess().getRule();
	}
	
	//enum qualityLevel:
	//	GOOD="good" |
	//	MEDIOCRE="okay" |
	//	NEEDSREMOVAL="needs removal";
	public QualityLevelElements getQualityLevelAccess() {
		return eQualityLevel;
	}
	
	public EnumRule getQualityLevelRule() {
		return getQualityLevelAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
